- calc = VFeeCalc.where(:user_id => current_user.id).first
- last_cutoff = FeeCutoff.order('cutoff_date DESC').first
- year = last_cutoff.cutoff_date.year
- month = last_cutoff.cutoff_date.month
- @terms = []
- 15.times do |i|
  - term = {}
  - m = month + i
  - unless m > 12
    - term[:month] = m
    - term[:year] = year
  - else
    - term[:month] = m - 12
    - term[:year] = year + 1
  - @terms << term

%h4 団費納入状況
%p
  = AccountTransaction.maximum(:posted_at).strftime('%Y年%m月%d日現在')

-# 計算
- debt = 0
- @terms.each do |term|
  - if Date.today.month <= term[:month] && Date.today.year <= term[:year]
    - break
  - fee = MonthlyFee.where(:user_id => calc.user.id, :year => term[:year], :month => term[:month]).first
  - if fee.nil?
    - debt += 0
  - else
    - debt += fee.amount
- diff = calc.amount - debt
= (Date.today.month - 1).to_s + '月分まで'
- if diff < 0
  %span.text-danger= number_to_currency(diff, :format => "%n%u", :unit => "円", :precision => 0)
- else
  %span.text-success= number_to_currency(diff, :format => "%n%u", :unit => "円", :precision => 0)
%br
- this_month = MonthlyFee.where(:user_id => current_user.id, :month => Date.today.month, :year => Date.today.year).first
= Date.today.month.to_s + '月末までに'
- diff = diff - this_month.amount
- if diff >= 0
  お支払いいただく必要はありません。
- else
  %span.text-danger= number_to_currency(diff * -1, :format => "%n%u", :unit => "円", :precision => 0)
  お支払いください！
.text-right
  %p= link_to '>>全体の団費納入状況', '/fees', {:target => '_blank'}
  %p{:onclick => 'loadPayee()'} >>団費振込先
  #payee

